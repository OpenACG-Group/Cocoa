
/**
 * This file was generated by modulec.py from Cocoa Module Description XML file.
 * Never modify it manually. To regenerate this file, update XML file and rerun
 * modulec.py script.
 * Timestamp: 2022-11-29 23:15:59.285930
 */


#include "include/v8.h"
#include "Gallium/bindings/Base.h"
#include "Gallium/binder/Convert.h"
#include "Gallium/binder/Class.h"

#include "Exports.h"

#define V_CAST_U32(x) static_cast<uint32_t>(x)
    
namespace libtess2 {
class Libtess2Binding : public cocoa::gallium::bindings::BindingBase
{
    GALLIUM_BINDING_OBJECT
public:
    Libtess2Binding();
    ~Libtess2Binding() override;
    void onSetInstanceProperties(v8::Local<v8::Object> instance) override;
    void onRegisterClasses(v8::Isolate *isolate) override;
    

    ClassExport<TessellatorWrap> class_Tessellator_;

};
namespace {
const char *g_unique_id = "70c6986c21c276ee";
const char *g_toplevel_exports[] = {
    "Tessellator",
    nullptr
}; // g_toplevel_exports
} // namespace anonymous

Libtess2Binding::Libtess2Binding()
    : cocoa::gallium::bindings::BindingBase("libtess2", "A software implementation of GLU triangulation algorithm for polygon tessellation") {}
Libtess2Binding::~Libtess2Binding() {}

const char *Libtess2Binding::onGetUniqueId() { return g_unique_id; }
const char **Libtess2Binding::onGetExports() { return g_toplevel_exports; }

void Libtess2Binding::onGetModule(cocoa::gallium::binder::Module& mod) {
    mod.set("Tessellator", *class_Tessellator_);
}

void Libtess2Binding::onRegisterClasses(v8::Isolate *isolate) {
    class_Tessellator_ = NewClassExport<TessellatorWrap>(isolate);
    (*class_Tessellator_)
    .constructor<>()
    .set("addContour2D", &TessellatorWrap::addContour2D)
    .set("addContour3D", &TessellatorWrap::addContour3D)
    .set("tessellate", &TessellatorWrap::tessellate)
    .set_static("CONSTRAINED_DELAUNAY_TRIANGULATION", TESS_CONSTRAINED_DELAUNAY_TRIANGULATION)
    .set_static("REVERSE_CONTOURS", TESS_REVERSE_CONTOURS)
    .set_static("WINDING_ODD", TESS_WINDING_ODD)
    .set_static("WINDING_NONZERO", TESS_WINDING_NONZERO)
    .set_static("WINDING_POSITIVE", TESS_WINDING_POSITIVE)
    .set_static("WINDING_NEGATIVE", TESS_WINDING_NEGATIVE)
    .set_static("WINDING_ABS_GEQ_TWO", TESS_WINDING_ABS_GEQ_TWO)
    .set_static("POLYGONS", TESS_POLYGONS)
    .set_static("CONNECTED_POLYGONS", TESS_CONNECTED_POLYGONS)
    .set_static("BOUNDARY_CONTOURS", TESS_BOUNDARY_CONTOURS)
    ;

}

void Libtess2Binding::onSetInstanceProperties(v8::Local<v8::Object> instance) {
}

} // namespace libtess2

namespace cocoa::gallium::bindings {
BindingBase *on_register_module_libtess2() {
    return new libtess2::Libtess2Binding();
}
} // cocoa::gallium::bindings

