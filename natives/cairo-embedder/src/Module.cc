
/**
 * This file was generated by modulec.py from Cocoa Module Description XML file.
 * Never modify it manually. To regenerate this file, update XML file and rerun
 * modulec.py script.
 * Timestamp: 2022-12-17 14:37:39.538224
 */


#include "include/v8.h"
#include "Gallium/bindings/Base.h"
#include "Gallium/binder/Convert.h"
#include "Gallium/binder/Class.h"

#include "Exports.h"

#define V_CAST_U32(x) static_cast<uint32_t>(x)
    
namespace cairo_embedder {
class CairoEmbedderBinding : public cocoa::gallium::bindings::BindingBase
{
    GALLIUM_BINDING_OBJECT
public:
    CairoEmbedderBinding();
    ~CairoEmbedderBinding() override;
    void onSetInstanceProperties(v8::Local<v8::Object> instance) override;
    void onRegisterClasses(v8::Isolate *isolate) override;
    

    ClassExport<FrameRecorderWrap> class_FrameRecorder_;

};
namespace {
const char *g_unique_id = "bdf10c107abff77e";
const char *g_toplevel_exports[] = {
    "FrameRecorder",
    nullptr
}; // g_toplevel_exports
} // namespace anonymous

CairoEmbedderBinding::CairoEmbedderBinding()
    : cocoa::gallium::bindings::BindingBase("cairo-embedder", "") {}
CairoEmbedderBinding::~CairoEmbedderBinding() {}

const char *CairoEmbedderBinding::onGetUniqueId() { return g_unique_id; }
const char **CairoEmbedderBinding::onGetExports() { return g_toplevel_exports; }

void CairoEmbedderBinding::onGetModule(cocoa::gallium::binder::Module& mod) {
    mod.set("FrameRecorder", *class_FrameRecorder_);
}

void CairoEmbedderBinding::onRegisterClasses(v8::Isolate *isolate) {
    class_FrameRecorder_ = NewClassExport<FrameRecorderWrap>(isolate);
    (*class_FrameRecorder_)
    .set_static_func("Attach", &FrameRecorderWrap::Attach)
    ;

}

void CairoEmbedderBinding::onSetInstanceProperties(v8::Local<v8::Object> instance) {
}

} // namespace cairo_embedder

namespace cocoa::gallium::bindings {
BindingBase *on_register_module_cairo-embedder() {
    return new cairo_embedder::CairoEmbedderBinding();
}
} // cocoa::gallium::bindings

